{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/util.ts","../src/chain.ts","../src/network.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { TxParams } from '@zilliqa-js/account';\nimport {\n  RPCResponse,\n  TransactionError,\n  TransactionObj,\n} from '@zilliqa-js/core';\nimport { toChecksumAddress } from '@zilliqa-js/crypto';\nimport { BN, Long } from '@zilliqa-js/util';\n\nexport function toTxParams(\n  response: RPCResponse<TransactionObj, never>,\n): TxParams {\n  const {\n    toAddr,\n    senderPubKey,\n    gasPrice,\n    gasLimit,\n    nonce,\n    amount,\n    receipt,\n    version,\n    code,\n    data,\n    ...rest\n  } = <TransactionObj>response.result;\n\n  const msg = receipt.errors\n    ? Object.keys(receipt.errors).reduce((acc, depth) => {\n        const errorMsgList = receipt.errors[depth].map(\n          (num: number) => TransactionError[num],\n        );\n        return { ...acc, [depth]: errorMsgList };\n      }, {})\n    : {};\n\n  return {\n    ...rest,\n    version: parseInt(version, 10),\n    toAddr: toChecksumAddress(toAddr),\n    pubKey: senderPubKey.replace('0x', ''),\n    gasPrice: new BN(gasPrice),\n    gasLimit: Long.fromString(gasLimit, 10),\n    amount: new BN(amount),\n    nonce: parseInt(nonce, 10),\n    receipt: {\n      ...receipt,\n      errors: msg,\n      cumulative_gas: parseInt(receipt.cumulative_gas, 10),\n    },\n  };\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Transaction, util, Wallet } from '@zilliqa-js/account';\nimport { fromBech32Address } from '@zilliqa-js/crypto';\nimport { validation } from '@zilliqa-js/util';\nimport { ContractObj, Value } from '@zilliqa-js/contract';\nimport {\n  BlockchainInfo,\n  BlockList,\n  DsBlockObj,\n  GET_TX_ATTEMPTS,\n  PendingTxnResult,\n  Provider,\n  RPCMethod,\n  RPCResponse,\n  ShardingStructure,\n  sign,\n  TransactionObj,\n  TxBlockObj,\n  TxList,\n  ZilliqaModule,\n} from '@zilliqa-js/core';\n\nimport { Omit } from 'utility-types';\n\nimport { toTxParams } from './util';\n\nexport class Blockchain implements ZilliqaModule {\n  signer: Wallet;\n  provider: Provider;\n\n  constructor(provider: Provider, signer: Wallet) {\n    this.provider = provider;\n    this.provider.middleware.request.use(\n      util.formatOutgoingTx,\n      RPCMethod.CreateTransaction,\n    );\n    this.signer = signer;\n  }\n\n  /**\n   * getBlockChainInfo\n   *\n   * @returns {Promise<RPCResponse<BlockchainInfo, string>>}\n   */\n  getBlockChainInfo(): Promise<RPCResponse<BlockchainInfo, string>> {\n    return this.provider.send(RPCMethod.GetBlockchainInfo);\n  }\n\n  /**\n   * getShardingStructure\n   *\n   * @returns {Promise<RPCResponse<ShardingStructure, string>>}\n   */\n  getShardingStructure(): Promise<RPCResponse<ShardingStructure, string>> {\n    return this.provider.send(RPCMethod.GetShardingStructure);\n  }\n\n  /**\n   * getDSBlock\n   *\n   * Get details of a Directory Service block by block number.\n   *\n   * @param {number} blockNum\n   * @returns {Promise<RPCResponse<DsBlockObj, string>>}\n   */\n  getDSBlock(blockNum: number): Promise<RPCResponse<DsBlockObj, string>> {\n    return this.provider.send(RPCMethod.GetDSBlock, blockNum.toString());\n  }\n\n  /**\n   * getLatestDSBlock\n   *\n   * Get details of the most recent Directory Service block.\n   *\n   * @returns {Promise<RPCResponse<DsBlockObj, string>>}\n   */\n  getLatestDSBlock(): Promise<RPCResponse<DsBlockObj, string>> {\n    return this.provider.send(RPCMethod.GetLatestDSBlock);\n  }\n\n  /**\n   * getNumDSBlocks\n   *\n   * Gets the number of DS blocks that the network has processed.\n   *\n   * @returns {Promise<RPCResponse<string, string>>}\n   */\n  getNumDSBlocks(): Promise<RPCResponse<string, string>> {\n    return this.provider.send(RPCMethod.GetNumDSBlocks);\n  }\n\n  /**\n   * getDSBlockRate\n   *\n   * Gets the average rate of DS blocks processed per second\n   *\n   * @returns {Promise<RPCResponse<number, string>>}\n   */\n  getDSBlockRate(): Promise<RPCResponse<number, string>> {\n    return this.provider.send(RPCMethod.GetDSBlockRate);\n  }\n\n  /**\n   * getDSBlockListing\n   *\n   * Get a paginated list of Directory Service blocks. Pass in page number as\n   * parameter. Returns a maxPages variable that specifies the max number of\n   * pages. 1 - latest blocks, maxPages - oldest blocks.\n   *\n   * @param {number} max\n   * @returns {Promise<RPCResponse<BlockList, string>>}\n   */\n  getDSBlockListing(max: number): Promise<RPCResponse<BlockList, string>> {\n    return this.provider.send(RPCMethod.DSBlockListing, max);\n  }\n\n  /**\n   * getTxBlock\n   *\n   * Get details of a Transaction block by block number.\n   *\n   * @param {number} blockNum\n   * @returns {Promise<RPCResponse<TxBlockObj, string>>}\n   */\n  getTxBlock(blockNum: number): Promise<RPCResponse<TxBlockObj, string>> {\n    return this.provider.send(RPCMethod.GetTxBlock, blockNum.toString());\n  }\n\n  /**\n   * getLatestTxBlock\n   *\n   * Get details of the most recent Transaction block.\n   *\n   * @returns {Promise<RPCResponse<TxBlockObj, string>>}\n   */\n  getLatestTxBlock(): Promise<RPCResponse<TxBlockObj, string>> {\n    return this.provider.send(RPCMethod.GetLatestTxBlock);\n  }\n\n  /**\n   * getNumTxBlocks\n   *\n   * Gets the total number of TxBlocks.\n   *\n   * @returns {Promise<RPCResponse<string, string>>}\n   */\n  getNumTxBlocks(): Promise<RPCResponse<string, string>> {\n    return this.provider.send(RPCMethod.GetNumTxBlocks);\n  }\n\n  /**\n   * getTxBlockRate\n   *\n   * Gets the average number of Tx blocks per second.\n   *\n   * @returns {Promise<RPCResponse<number, string>>}\n   */\n  getTxBlockRate(): Promise<RPCResponse<number, string>> {\n    return this.provider.send(RPCMethod.GetTxBlockRate);\n  }\n\n  /**\n   * getTxBlockListing\n   *\n   * Get a paginated list of Transaction blocks. Takes a page number as\n   * parameter, where each page contains a list of 10 blocks (max). Returns\n   * a maxPages variable that specifies the max number of pages. 1 - latest\n   * blocks, maxPages - oldest blocks.\n   *\n   * @param {number} max\n   * @returns {Promise<RPCResponse<BlockList, string>>}\n   */\n  getTxBlockListing(max: number): Promise<RPCResponse<BlockList, string>> {\n    return this.provider.send(RPCMethod.TxBlockListing, max);\n  }\n\n  /**\n   * getNumTransactions\n   *\n   * Gets the number of transactions processed by the network so far.\n   *\n   * @returns {Promise<RPCResponse<string, string>>}\n   */\n  getNumTransactions(): Promise<RPCResponse<string, string>> {\n    return this.provider.send(RPCMethod.GetNumTransactions);\n  }\n\n  /**\n   * getTransactionRate\n   *\n   * Gets the number of transactions processed per second\n   *\n   * @returns {Promise<RPCResponse<number, string>>}\n   */\n  getTransactionRate(): Promise<RPCResponse<number, string>> {\n    return this.provider.send(RPCMethod.GetTransactionRate);\n  }\n\n  /**\n   * getCurrentMiniEpoch\n   *\n   * Gets the current Tx Epoch.\n   *\n   * @returns {Promise<RPCResponse<string, string>>}\n   */\n  getCurrentMiniEpoch(): Promise<RPCResponse<string, string>> {\n    return this.provider.send(RPCMethod.GetCurrentMiniEpoch);\n  }\n\n  /**\n   * getCurrentDSEpoch\n   *\n   * Gets the current DS Epoch.\n   *\n   * @returns {Promise<RPCResponse<any, string>>}\n   */\n  getCurrentDSEpoch(): Promise<RPCResponse<any, string>> {\n    return this.provider.send(RPCMethod.GetCurrentDSEpoch);\n  }\n\n  /**\n   * getPrevDifficulty\n   *\n   * Gets shard difficulty for previous PoW round\n   *\n   * @returns {Promise<RPCResponse<number, string>>}\n   */\n  getPrevDifficulty(): Promise<RPCResponse<number, string>> {\n    return this.provider.send(RPCMethod.GetPrevDifficulty);\n  }\n\n  /**\n   * getPrevDSDifficulty\n   *\n   * Gets DS difficulty for previous PoW round\n   *\n   * @returns {Promise<RPCResponse<number, string>>}\n   */\n  getPrevDSDifficulty(): Promise<RPCResponse<number, string>> {\n    return this.provider.send(RPCMethod.GetPrevDSDifficulty);\n  }\n\n  /**\n   * createTransaction\n   *\n   * Creates a transaction and polls the lookup node for a transaction\n   * receipt. The transaction is considered to be lost if it is not confirmed\n   * within the timeout period.\n   *\n   * @param {Transaction} tx\n   * @param {number} maxAttempts - (optional) number of times to poll before timing out\n   * @param {number} number - (optional) interval in ms\n   * @returns {Promise<Transaction>} - the Transaction that has been signed and\n   * broadcasted to the network.\n   */\n  @sign\n  async createTransaction(\n    tx: Transaction,\n    maxAttempts: number = GET_TX_ATTEMPTS,\n    interval: number = 1000,\n    blockConfirm: boolean = false,\n  ): Promise<Transaction> {\n    try {\n      const response = await this.provider.send(RPCMethod.CreateTransaction, {\n        ...tx.txParams,\n        priority: tx.toDS,\n      });\n\n      if (response.error) {\n        throw response.error;\n      }\n      if (blockConfirm) {\n        return tx.blockConfirm(response.result.TranID, maxAttempts, interval);\n      }\n      return tx.confirm(response.result.TranID, maxAttempts, interval);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @sign\n  async createTransactionWithoutConfirm(tx: Transaction): Promise<Transaction> {\n    try {\n      const response = await this.provider.send(RPCMethod.CreateTransaction, {\n        ...tx.txParams,\n        priority: tx.toDS,\n      });\n      if (response.error) {\n        throw response.error;\n      }\n      tx.id = response.result.TranID;\n      return tx;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * getTransaction\n   *\n   * Retrieves a transaction from the blockchain by its hash. If the result\n   * contains an Error, a rejected Promise is returned with the erorr message.\n   * If it does not contained an error, but `receipt.success` is `false`, then\n   * a rejected Transaction instance is returned.\n   *\n   * @param {string} txHash\n   * @returns {Promise<any>}\n   */\n  async getTransaction(txHash: string): Promise<Transaction> {\n    try {\n      const response = await this.provider.send<TransactionObj>(\n        RPCMethod.GetTransaction,\n        txHash,\n      );\n\n      if (response.error) {\n        return Promise.reject(response.error);\n      }\n\n      return response.result.receipt.success\n        ? Transaction.confirm(toTxParams(response), this.provider)\n        : Transaction.reject(toTxParams(response), this.provider);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * getRecentTransactions\n   *\n   * Gets a list of recent transactions\n   *\n   * @returns {Promise<RPCResponse<TxList, never>>}\n   */\n  getRecentTransactions(): Promise<RPCResponse<TxList, never>> {\n    return this.provider.send(RPCMethod.GetRecentTransactions);\n  }\n\n  /**\n   * getTransactionsForTxBlock\n   *\n   * Gets all transactions for a given TxBlock, grouped by shard id\n   *\n   * @param {number} txBlock\n   * @returns {Promise<RPCResponse<string[][], string>>}\n   */\n  getTransactionsForTxBlock(\n    txBlock: number,\n  ): Promise<RPCResponse<string[][], string>> {\n    return this.provider.send(\n      RPCMethod.GetTransactionsForTxBlock,\n      txBlock.toString(),\n    );\n  }\n\n  /**\n   * getNumTxnsTxEpoch\n   *\n   * Gets the number of transactions procesed for a given Tx Epoch.\n   *\n   * @param {number} epoch\n   * @returns {Promise<RPCResponse<number, never>>}\n   */\n  getNumTxnsTxEpoch(epoch: number): Promise<RPCResponse<string, string>> {\n    return this.provider.send(RPCMethod.GetNumTxnsTxEpoch, epoch);\n  }\n\n  /**\n   * getNumTxnsDSEpoch\n   *\n   * Gets the number of transactions procesed for a given DS Epoch.\n   *\n   * @param {number} epoch\n   * @returns {Promise<any>}\n   */\n  getNumTxnsDSEpoch(epoch: number): Promise<RPCResponse<string, string>> {\n    return this.provider.send(RPCMethod.GetNumTxnsDSEpoch, epoch);\n  }\n\n  /**\n   * getMinimumGasPrice\n   *\n   * Gets the numeric minimum gas price\n   *\n   * @returns {Promise<RPCResponse<string, string>>}\n   */\n  getMinimumGasPrice() {\n    return this.provider.send<string, string>(RPCMethod.GetMinimumGasPrice);\n  }\n\n  /**\n   * getPendingTxn\n   * See the pending status of transaction\n   * @param txId\n   */\n  getPendingTxn(txId: string): Promise<RPCResponse<PendingTxnResult, string>> {\n    return this.provider.send(\n      RPCMethod.GetPendingTxn,\n      txId.replace('0x', '').toLowerCase(),\n    );\n  }\n\n  /**\n   * getBalance\n   *\n   * Gets the balance of an account by address\n   *\n   * @param {string} address\n   * @returns {Promise<RPCResponse<any, string>>}\n   */\n  getBalance(addr: string): Promise<RPCResponse<any, string>> {\n    const address = validation.isBech32(addr) ? fromBech32Address(addr) : addr;\n    return this.provider.send(\n      RPCMethod.GetBalance,\n      address.replace('0x', '').toLowerCase(),\n    );\n  }\n\n  /**\n   * getSmartContractCode - returns the smart contract code of a deployed contract.\n   *\n   * @param {string} address\n   * @returns {Promise<RPCResponse<{code: string }, string>>}\n   */\n  getSmartContractCode(\n    addr: string,\n  ): Promise<RPCResponse<{ code: string }, string>> {\n    const address = validation.isBech32(addr) ? fromBech32Address(addr) : addr;\n    return this.provider.send(\n      RPCMethod.GetSmartContractCode,\n      address.replace('0x', '').toLowerCase(),\n    );\n  }\n\n  /**\n   * getSmartContractInit\n   *\n   * @param {string} address\n   * @returns {Promise<RPCResponse<Value[], string>>}\n   */\n  getSmartContractInit(addr: string): Promise<RPCResponse<Value[], string>> {\n    const address = validation.isBech32(addr) ? fromBech32Address(addr) : addr;\n    return this.provider.send(\n      RPCMethod.GetSmartContractInit,\n      address.replace('0x', '').toLowerCase(),\n    );\n  }\n\n  /**\n   * getSmartContractState - retrieves the entire state of a smart contract\n   *\n   * @param {string} address\n   * @returns {Promise<RPCResponse<any, string>>}\n   */\n  getSmartContractState(addr: string): Promise<RPCResponse<any, string>> {\n    const address = validation.isBech32(addr) ? fromBech32Address(addr) : addr;\n    return this.provider.send(\n      RPCMethod.GetSmartContractState,\n      address.replace('0x', '').toLowerCase(),\n    );\n  }\n\n  /**\n   * getSmartContractSubState - Queries the contract state, filtered by the variable names.\n   * This function is the filtered version of `getSmartContractState`.\n   * As `getSubState` performs the filtering, `variableName` of a field is required.\n   * If the `subState` is not found, this returns a `null` response.\n   *\n   * @param {string} address\n   * @param { string } variableName - variable name within the state\n   * @param { string[] } indices - (optional) If the variable is of map type, you can specify an index (or indices)\n   * @returns {Promise<RPCResponse<any, string>>}\n   */\n\n  getSmartContractSubState(\n    addr: string,\n    variableName: string,\n    indices?: string[],\n  ): Promise<RPCResponse<any, string>> {\n    const address = validation.isBech32(addr) ? fromBech32Address(addr) : addr;\n    if (!variableName) {\n      throw new Error('Variable name required');\n    }\n\n    return this.provider.send(\n      RPCMethod.GetSmartContractSubState,\n      address.replace('0x', '').toLowerCase(),\n      variableName,\n      indices === undefined ? [] : indices,\n    );\n  }\n\n  /**\n   * getSmartContracts\n   *\n   * @param {string} address\n   * @returns {Promise<RPCResponse<Omit<ContractObj, 'init' | 'abi'>, string>>}\n   */\n  getSmartContracts(\n    addr: string,\n  ): Promise<RPCResponse<Omit<ContractObj, 'init' | 'abi'>, string>> {\n    const address = validation.isBech32(addr) ? fromBech32Address(addr) : addr;\n    return this.provider.send(\n      RPCMethod.GetSmartContracts,\n      address.replace('0x', '').toLowerCase(),\n    );\n  }\n\n  /**\n   * getContractAddressFromTransactionID\n   *\n   * @param {string} txHash\n   * @returns {Promise<RPCResponse<string, string>>}\n   */\n  getContractAddressFromTransactionID(\n    txHash: string,\n  ): Promise<RPCResponse<string, string>> {\n    return this.provider.send(\n      RPCMethod.GetContractAddressFromTransactionID,\n      txHash,\n    );\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Provider, ZilliqaModule } from '@zilliqa-js/core';\nimport { Wallet } from '@zilliqa-js/account';\n\nconst enum NetworkMethods {\n  GetClientVersion = 'GetClientVersion',\n  GetNetworkId = 'GetNetworkId',\n  GetProtocolVersion = 'GetProtocolVersion',\n}\n\nexport class Network implements ZilliqaModule {\n  provider: Provider;\n  signer: Wallet;\n\n  constructor(provider: Provider, signer: Wallet) {\n    this.provider = provider;\n    this.signer = signer;\n  }\n\n  getClientVersion(): Promise<any> {\n    return this.provider.send(NetworkMethods.GetClientVersion);\n  }\n\n  GetNetworkId(): Promise<any> {\n    return this.provider.send(NetworkMethods.GetNetworkId);\n  }\n\n  GetProtocolVersion(blockNum: number): Promise<any> {\n    return this.provider.send(NetworkMethods.GetProtocolVersion);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport { Blockchain } from './chain';\nexport { Network } from './network';\n"],"names":["TransactionError","toChecksumAddress","BN","Long","util","Transaction","validation","fromBech32Address","sign"],"mappings":"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"}