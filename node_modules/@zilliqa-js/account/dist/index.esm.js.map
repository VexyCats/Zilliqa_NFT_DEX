{"version":3,"file":"index.esm.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/util.ts","../src/account.ts","../src/wallet.ts","../src/transaction.ts","../src/transactionFactory.ts","../src/types.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ReqMiddlewareFn, RPCMethod } from '@zilliqa-js/core';\nimport { bytes, validation } from '@zilliqa-js/util';\nimport { ZilliqaMessage } from '@zilliqa-js/proto';\nimport { TxReceipt, TxParams } from './types';\n\nexport const encodeTransactionProto = (tx: TxParams): Buffer => {\n  const msg = {\n    version: tx.version,\n    nonce: tx.nonce || 0,\n    // core protocol Schnorr expects lowercase, non-prefixed address.\n    toaddr: bytes.hexToByteArray(tx.toAddr.replace('0x', '').toLowerCase()),\n    senderpubkey: ZilliqaMessage.ByteArray.create({\n      data: bytes.hexToByteArray(tx.pubKey || '00'),\n    }),\n    amount: ZilliqaMessage.ByteArray.create({\n      data: Uint8Array.from(tx.amount.toArrayLike(Buffer, undefined, 16)),\n    }),\n    gasprice: ZilliqaMessage.ByteArray.create({\n      data: Uint8Array.from(tx.gasPrice.toArrayLike(Buffer, undefined, 16)),\n    }),\n    gaslimit: tx.gasLimit,\n    code:\n      tx.code && tx.code.length\n        ? Uint8Array.from([...tx.code].map((c) => <number>c.charCodeAt(0)))\n        : null,\n    data:\n      tx.data && tx.data.length\n        ? Uint8Array.from([...tx.data].map((c) => <number>c.charCodeAt(0)))\n        : null,\n  };\n\n  const serialised = ZilliqaMessage.ProtoTransactionCoreInfo.create(msg);\n\n  return Buffer.from(\n    ZilliqaMessage.ProtoTransactionCoreInfo.encode(serialised).finish(),\n  );\n};\n\nexport const isTxReceipt = (x: unknown): x is TxReceipt => {\n  return validation.isPlainObject(x) && validation.matchesObject(x, {});\n};\n\nexport const isTxParams = (obj: unknown): obj is TxParams => {\n  const validator = {\n    version: [validation.required(validation.isNumber)],\n    toAddr: [validation.required(validation.isAddress)],\n    amount: [validation.required(validation.isBN)],\n    gasPrice: [validation.required(validation.isBN)],\n    gasLimit: [validation.required(validation.isLong)],\n    code: [validation.isString],\n    data: [validation.isString],\n    receipt: [isTxReceipt],\n    nonce: [validation.required(validation.isNumber)],\n    signature: [validation.required(validation.isSignature)],\n  };\n\n  return validation.matchesObject(obj, validator);\n};\n\nexport const formatOutgoingTx: ReqMiddlewareFn<[TxParams]> = (req) => {\n  if (\n    req.payload.method === RPCMethod.CreateTransaction &&\n    isTxParams(req.payload.params[0])\n  ) {\n    const txConfig = req.payload.params[0];\n\n    const ret = {\n      ...req,\n      payload: {\n        ...req.payload,\n        params: [\n          {\n            ...txConfig,\n            amount: txConfig.amount.toString(),\n            gasLimit: txConfig.gasLimit.toString(),\n            gasPrice: txConfig.gasPrice.toString(),\n          },\n        ],\n      },\n    };\n\n    return ret;\n  }\n\n  return req;\n};\n\nexport async function sleep(ms: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(), ms);\n  });\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as zcrypto from '@zilliqa-js/crypto';\n\nexport class Account {\n  /**\n   * fromFile\n   *\n   * Takes a JSON-encoded keystore and passphrase, returning a fully\n   * instantiated Account instance.\n   *\n   * @param {string} file\n   * @param {string} passphrase\n   * @returns {Promise<Account>}\n   */\n  static async fromFile(file: string, passphrase: string): Promise<Account> {\n    try {\n      const keystore = JSON.parse(file);\n      const privateKey = await zcrypto.decryptPrivateKey(passphrase, keystore);\n\n      return new Account(privateKey);\n    } catch (err) {\n      throw new Error(`Could not decrypt keystore file.`);\n    }\n  }\n\n  privateKey: string;\n  publicKey: string;\n  address: string;\n  bech32Address: string;\n\n  constructor(privateKey: string) {\n    this.privateKey = this.normalizePrivateKey(privateKey);\n    this.publicKey = zcrypto.getPubKeyFromPrivateKey(this.privateKey);\n    this.address = zcrypto.getAddressFromPublicKey(this.publicKey);\n    this.bech32Address = zcrypto.toBech32Address(this.address);\n  }\n\n  /**\n   * toFile\n   *\n   * @param {string} passphrase\n   * @param {kdf} 'pbkdf2' | 'scrypt'\n   * @returns {Promise<string>}\n   */\n  async toFile(\n    passphrase: string,\n    kdf: 'pbkdf2' | 'scrypt' = 'scrypt',\n  ): Promise<string> {\n    if (!passphrase || !passphrase.length) {\n      throw new Error('Passphrase cannot have a length of 0');\n    }\n\n    const keystore = await zcrypto.encryptPrivateKey(\n      kdf,\n      this.privateKey,\n      passphrase,\n    );\n\n    return keystore;\n  }\n\n  /**\n   * signTransaction\n   *\n   * @param {Buffer} bytes - the data to be signed\n   *\n   * @returns {string} - the hex encoded signature. it is a concatenation of\n   * the r and s values in hex, each padded to a length of 64.\n   */\n  signTransaction(bytes: Buffer) {\n    return zcrypto.sign(bytes, this.privateKey, this.publicKey);\n  }\n\n  private normalizePrivateKey(privateKey: string) {\n    return zcrypto.normalizePrivateKey(privateKey);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport bip39 from 'bip39';\nimport hdkey from 'hdkey';\nimport { Signer, Provider } from '@zilliqa-js/core';\nimport * as zcrypto from '@zilliqa-js/crypto';\n\nimport { Account } from './account';\nimport { Transaction } from './transaction';\n\nexport class Wallet extends Signer {\n  accounts: { [address: string]: Account } = {};\n  defaultAccount?: Account;\n  provider: Provider;\n\n  /**\n   * constructor\n   *\n   * Takes an array of Account objects and instantiates a Wallet instance.\n   *\n   * @param {Account[]} accounts\n   */\n  constructor(provider: Provider, accounts: Account[] = []) {\n    super();\n    if (accounts.length) {\n      this.accounts = accounts.reduce(\n        (acc, account) => {\n          return { ...acc, [account.address]: account };\n        },\n        {} as any,\n      );\n    }\n\n    this.provider = provider;\n    this.defaultAccount = accounts[0];\n  }\n\n  /**\n   * create\n   *\n   * Creates a new keypair with a randomly-generated private key. The new\n   * account is accessible by address.\n   *\n   * @returns {string} - address of the new account\n   */\n  create(): string {\n    const privateKey = zcrypto.schnorr.generatePrivateKey();\n    const newAccount = new Account(privateKey);\n\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByPrivateKey\n   *\n   * Adds an account to the wallet by private key.\n   *\n   * @param {string} privateKey - hex-encoded private key\n   * @returns {string} - the corresponing address, computer from the private\n   * key.\n   */\n  addByPrivateKey(privateKey: string): string {\n    const newAccount = new Account(privateKey);\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByKeystore\n   *\n   * Adds an account by keystore. This method is asynchronous and returns\n   * a Promise<string>, in order not to block on the underlying decryption\n   * operation.\n   *\n   * @param {string} keystore\n   * @param {string} passphrase\n   * @returns {Promise<string>}\n   */\n  async addByKeystore(keystore: string, passphrase: string): Promise<string> {\n    const newAccount = await Account.fromFile(keystore, passphrase);\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByMnemonic\n   *\n   * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\n   *\n   * @param {string} phrase - 12-word mnemonic phrase\n   * @param {number} index=0 - the number of the child key to add\n   * @returns {string} - the corresponding address\n   */\n  addByMnemonic(phrase: string, index: number = 0): string {\n    if (!this.isValidMnemonic(phrase)) {\n      throw new Error(`Invalid mnemonic phrase: ${phrase}`);\n    }\n    const seed = bip39.mnemonicToSeed(phrase);\n    const hdKey = hdkey.fromMasterSeed(seed);\n    const childKey = hdKey.derive(`m/44'/313'/0'/0/${index}`);\n    const privateKey = childKey.privateKey.toString('hex');\n    return this.addByPrivateKey(privateKey);\n  }\n\n  /**\n   * export\n   *\n   * Exports the specified account as a keystore file.\n   *\n   * @param {string} address\n   * @param {string} passphrase\n   * @param {KDF} kdf='scrypt'\n   * @returns {Promise<string>}\n   */\n  export(\n    address: string,\n    passphrase: string,\n    kdf: zcrypto.KDF = 'scrypt',\n  ): Promise<string> {\n    if (!this.accounts[address]) {\n      throw new Error(`No account with address ${address} exists`);\n    }\n\n    return this.accounts[address].toFile(passphrase, kdf);\n  }\n\n  /**\n   * remove\n   *\n   * Removes an account from the wallet and returns boolean to indicate\n   * failure or success.\n   *\n   * @param {string} address\n   * @returns {boolean}\n   */\n  remove(address: string): boolean {\n    if (this.accounts[address]) {\n      const { [address]: toRemove, ...rest } = this.accounts;\n\n      this.accounts = rest;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * setDefault\n   *\n   * Sets the default account of the wallet.\n   *\n   * @param {string} address\n   */\n  setDefault(address: string) {\n    this.defaultAccount = this.accounts[address];\n  }\n\n  /**\n   * sign\n   *\n   * signs an unsigned transaction with the default account.\n   *\n   * @param {Transaction} tx\n   * @param {string} account\n   * @returns {Transaction}\n   */\n  sign(tx: Transaction): Promise<Transaction> {\n    if (tx.txParams && tx.txParams.pubKey) {\n      // attempt to find the address\n      const senderAddress = zcrypto.getAddressFromPublicKey(tx.txParams.pubKey);\n\n      if (!this.accounts[senderAddress]) {\n        throw new Error(\n          `Could not sign the transaction with ${senderAddress} as it does not exist`,\n        );\n      }\n\n      return this.signWith(tx, senderAddress);\n    }\n\n    if (!this.defaultAccount) {\n      throw new Error('This wallet has no default account.');\n    }\n\n    return this.signWith(tx, this.defaultAccount.address);\n  }\n\n  /**\n   * signWith\n   *\n   * @param {Transaction} tx\n   * @param {string} account\n   * @returns {Transaction}\n   */\n  async signWith(tx: Transaction, account: string): Promise<Transaction> {\n    if (!this.accounts[account]) {\n      throw new Error(\n        'The selected account does not exist on this Wallet instance.',\n      );\n    }\n\n    try {\n      const signer = this.accounts[account];\n\n      if (!tx.txParams.nonce) {\n        const balance = await this.provider.send(\n          'GetBalance',\n          signer.address.replace('0x', '').toLowerCase(),\n        );\n\n        if (typeof balance.result.nonce !== 'number') {\n          throw new Error('Could not get nonce');\n        }\n\n        const withNonce = tx.map((txObj) => {\n          return {\n            ...txObj,\n            nonce: txObj.nonce || balance.result.nonce + 1,\n            pubKey: signer.publicKey,\n          };\n        });\n\n        return withNonce.map((txObj) => {\n          // @ts-ignore\n          return {\n            ...txObj,\n            signature: signer.signTransaction(withNonce.bytes),\n          };\n        });\n      }\n\n      return tx.map((txObj) => {\n        return {\n          ...txObj,\n          signature: signer.signTransaction(tx.bytes),\n        };\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  private isValidMnemonic(phrase: string): boolean {\n    if (phrase.trim().split(/\\s+/g).length < 12) {\n      return false;\n    }\n    return bip39.validateMnemonic(phrase);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EventEmitter,\n  GET_TX_ATTEMPTS,\n  Provider,\n  RPCMethod,\n  RPCResponse,\n  Signable,\n  TxBlockObj,\n} from '@zilliqa-js/core';\nimport { getAddressFromPublicKey, normaliseAddress } from '@zilliqa-js/crypto';\nimport { BN, Long } from '@zilliqa-js/util';\n\nimport {\n  TxEventName,\n  TxIncluded,\n  TxParams,\n  TxReceipt,\n  TxStatus,\n} from './types';\nimport { encodeTransactionProto, sleep } from './util';\n\n/**\n * Transaction\n *\n * Transaction is a functor. Its purpose is to encode the possible states a\n * Transaction can be in:  Confirmed, Rejected, Pending, or Initialised (i.e., not broadcasted).\n */\nexport class Transaction implements Signable {\n  /**\n   * confirm\n   *\n   * constructs an already-confirmed transaction.\n   *\n   * @static\n   * @param {BaseTx} params\n   */\n  static confirm(params: TxParams, provider: Provider) {\n    return new Transaction(params, provider, TxStatus.Confirmed);\n  }\n\n  /**\n   * reject\n   *\n   * constructs an already-rejected transaction.\n   *\n   * @static\n   * @param {BaseTx} params\n   */\n  static reject(params: TxParams, provider: Provider) {\n    return new Transaction(params, provider, TxStatus.Rejected);\n  }\n\n  provider: Provider;\n  eventEmitter: EventEmitter<Transaction>;\n  id?: string;\n  status: TxStatus;\n  toDS: boolean;\n  blockConfirmation?: number;\n\n  // parameters\n  private version: number;\n  private nonce?: number;\n  private toAddr: string;\n  private pubKey?: string;\n  private amount: BN;\n  private gasPrice: BN;\n  private gasLimit: Long;\n  private code: string = '';\n  private data: string = '';\n  private receipt?: TxReceipt;\n  private signature?: string;\n\n  get bytes(): Buffer {\n    return encodeTransactionProto(this.txParams);\n  }\n\n  get senderAddress(): string {\n    if (!this.pubKey) {\n      return '0'.repeat(40);\n    }\n\n    return getAddressFromPublicKey(this.pubKey);\n  }\n\n  get txParams(): TxParams {\n    return {\n      version: this.version,\n      toAddr: normaliseAddress(this.toAddr),\n      nonce: this.nonce,\n      pubKey: this.pubKey,\n      amount: this.amount,\n      gasPrice: this.gasPrice,\n      gasLimit: this.gasLimit,\n      code: this.code,\n      data: this.data,\n      signature: this.signature,\n      receipt: this.receipt,\n    };\n  }\n\n  get payload() {\n    return {\n      version: 0,\n      toAddr: this.toAddr,\n      nonce: this.nonce,\n      pubKey: this.pubKey,\n      amount: this.amount.toString(),\n      gasPrice: this.gasPrice.toString(),\n      gasLimit: this.gasLimit.toString(),\n      code: this.code,\n      data: this.data,\n      signature: this.signature,\n      receipt: this.receipt,\n    };\n  }\n\n  constructor(\n    params: TxParams,\n    provider: Provider,\n    status: TxStatus = TxStatus.Initialised,\n    toDS: boolean = false,\n  ) {\n    // private members\n    this.version = params.version;\n    this.toAddr = normaliseAddress(params.toAddr);\n    this.nonce = params.nonce;\n    this.pubKey = params.pubKey;\n    this.amount = params.amount;\n    this.code = params.code || '';\n    this.data = params.data || '';\n    this.signature = params.signature;\n    this.gasPrice = params.gasPrice;\n    this.gasLimit = params.gasLimit;\n    this.receipt = params.receipt;\n    // public members\n    this.provider = provider;\n    this.status = status;\n    this.toDS = toDS;\n    this.blockConfirmation = 0;\n    this.eventEmitter = new EventEmitter();\n  }\n\n  /**\n   * isPending\n   *\n   * @returns {boolean}\n   */\n  isPending(): boolean {\n    return this.status === TxStatus.Pending;\n  }\n\n  /**\n   * isInitialised\n   *\n   * @returns {boolean}\n   */\n  isInitialised(): boolean {\n    return this.status === TxStatus.Initialised;\n  }\n\n  getReceipt(): TxReceipt | undefined {\n    return this.receipt;\n  }\n\n  /**\n   * isConfirmed\n   *\n   * @returns {boolean}\n   */\n  isConfirmed(): boolean {\n    return this.status === TxStatus.Confirmed;\n  }\n\n  /**\n   * isRejected\n   *\n   * @returns {boolean}\n   */\n  isRejected(): boolean {\n    return this.status === TxStatus.Rejected;\n  }\n\n  /**\n   * setProvider\n   *\n   * Sets the provider on this instance.\n   *\n   * @param {Provider} provider\n   */\n  setProvider(provider: Provider) {\n    this.provider = provider;\n  }\n\n  /**\n   * setStatus\n   *\n   * Escape hatch to imperatively set the state of the transaction.\n   *\n   * @param {TxStatus} status\n   * @returns {undefined}\n   */\n  setStatus(status: TxStatus) {\n    this.status = status;\n    return this;\n  }\n\n  observed(): EventEmitter<Transaction> {\n    return this.eventEmitter;\n  }\n\n  /**\n   * blockConfirm\n   *\n   * Use `RPCMethod.GetLatestBlock` to get latest blockNumber\n   * Use interval to get the latestBlockNumber\n   * After BlockNumber change, then we use `RPCMethod.GetTransaction` to get the receipt\n   *\n   * @param {string} txHash\n   * @param {number} maxblockCount\n   * @param {number} interval interval in milliseconds\n   * @returns {Promise<Transaction>}\n   */\n  async blockConfirm(\n    txHash: string,\n    maxblockCount: number = 4,\n    interval: number = 1000,\n  ) {\n    this.status = TxStatus.Pending;\n    const blockStart: BN = await this.getBlockNumber();\n    let blockChecked = blockStart;\n    for (let attempt = 0; attempt < maxblockCount; attempt += 1) {\n      try {\n        const blockLatest: BN = await this.getBlockNumber();\n        const blockNext: BN = blockChecked.add(\n          new BN(attempt === 0 ? attempt : 1),\n        );\n        if (blockLatest.gte(blockNext)) {\n          blockChecked = blockLatest;\n          this.emit(TxEventName.Track, {\n            txHash,\n            attempt,\n            currentBlock: blockChecked.toString(),\n          });\n          if (await this.trackTx(txHash)) {\n            this.blockConfirmation = blockLatest.sub(blockStart).toNumber();\n            return this;\n          }\n        } else {\n          attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n        }\n      } catch (err) {\n        this.status = TxStatus.Rejected;\n        throw err;\n      }\n\n      if (attempt + 1 < maxblockCount) {\n        await sleep(interval);\n      }\n    }\n\n    // if failed\n    const blockFailed: BN = await this.getBlockNumber();\n    this.blockConfirmation = blockFailed.sub(blockStart).toNumber();\n    this.status = TxStatus.Rejected;\n    const errorMessage = `The transaction is still not confirmed after ${maxblockCount} blocks.`;\n\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * confirmReceipt\n   *\n   * Similar to the Promise API. This sets the Transaction instance to a state\n   * of pending. Calling this function kicks off a passive loop that polls the\n   * lookup node for confirmation on the txHash.\n   *\n   * The polls are performed with a linear backoff:\n   *\n   * `const delay = interval * attempt`\n   *\n   * This is a low-level method that you should generally not have to use\n   * directly.\n   *\n   * @param {string} txHash\n   * @param {number} maxAttempts\n   * @param {number} initial interval in milliseconds\n   * @returns {Promise<Transaction>}\n   */\n  async confirm(\n    txHash: string,\n    maxAttempts = GET_TX_ATTEMPTS,\n    interval = 1000,\n  ): Promise<Transaction> {\n    this.status = TxStatus.Pending;\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      this.emit(TxEventName.Track, {\n        txHash,\n        attempt,\n      });\n      try {\n        if (await this.trackTx(txHash)) {\n          return this;\n        }\n      } catch (err) {\n        this.status = TxStatus.Rejected;\n        throw err;\n      }\n      if (attempt + 1 < maxAttempts) {\n        await sleep(interval * attempt);\n      }\n    }\n    this.status = TxStatus.Rejected;\n    const errorMessage = `The transaction is still not confirmed after ${maxAttempts} attempts.`;\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * map\n   *\n   * maps over the transaction, allowing for manipulation.\n   *\n   * @param {(prev: TxParams) => TxParams} fn - mapper\n   * @returns {Transaction}\n   */\n  map(fn: (prev: TxParams) => TxParams): Transaction {\n    const newParams = fn(this.txParams);\n    this.setParams(newParams);\n\n    return this;\n  }\n\n  private setParams(params: TxParams) {\n    this.version = params.version;\n    this.toAddr = normaliseAddress(params.toAddr);\n    this.nonce = params.nonce;\n    this.pubKey = params.pubKey;\n    this.amount = params.amount;\n    this.code = params.code || '';\n    this.data = params.data || '';\n    this.signature = params.signature;\n    this.gasPrice = params.gasPrice;\n    this.gasLimit = params.gasLimit;\n    this.receipt = params.receipt;\n  }\n\n  private async trackTx(txHash: string): Promise<boolean> {\n    const res: RPCResponse<TxIncluded, string> = await this.provider.send(\n      RPCMethod.GetTransaction,\n      txHash,\n    );\n\n    if (res.error) {\n      this.emit(TxEventName.Error, res.error);\n      return false;\n    }\n\n    this.id = res.result.ID;\n    this.receipt = {\n      ...res.result.receipt,\n      cumulative_gas: parseInt(res.result.receipt.cumulative_gas, 10),\n    };\n    this.emit(TxEventName.Receipt, this.receipt);\n    this.status =\n      this.receipt && this.receipt.success\n        ? TxStatus.Confirmed\n        : TxStatus.Rejected;\n    return true;\n  }\n\n  private async getBlockNumber(): Promise<BN> {\n    try {\n      const res: RPCResponse<TxBlockObj, string> = await this.provider.send(\n        RPCMethod.GetLatestTxBlock,\n      );\n      if (res.error === undefined && res.result.header.BlockNum) {\n        // if blockNumber is too high, we use BN to be safer\n        return new BN(res.result.header.BlockNum);\n      } else {\n        throw new Error('Can not get latest BlockNumber');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private emit(event: TxEventName | string, txEvent: any) {\n    this.eventEmitter.emit(event, { ...txEvent, event });\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Provider, RPCMethod, ZilliqaModule } from '@zilliqa-js/core';\nimport { Transaction } from './transaction';\nimport { TxParams, TxStatus } from './types';\nimport { formatOutgoingTx } from './util';\nimport { Wallet } from './wallet';\n\nexport class TransactionFactory implements ZilliqaModule {\n  provider: Provider;\n  signer: Wallet;\n\n  constructor(provider: Provider, signer: Wallet) {\n    this.provider = provider;\n    this.provider.middleware.request.use(\n      formatOutgoingTx,\n      RPCMethod.CreateTransaction,\n    );\n    this.signer = signer;\n  }\n\n  new(txParams: TxParams, toDs: boolean = false) {\n    return new Transaction(txParams, this.provider, TxStatus.Initialised, toDs);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { BN, Long } from '@zilliqa-js/util';\nimport { TransactionReceiptObj } from '@zilliqa-js/core';\n\nexport const enum TxStatus {\n  Initialised,\n  Pending,\n  Confirmed,\n  Rejected,\n}\n\nexport interface TxCreated {\n  Info: string;\n  TranID: string;\n  ContractAddress?: string;\n}\n\nexport interface TxRejected {\n  Error: string;\n}\n\nexport type TxReceipt = TransactionReceiptObj<number>;\n\nexport interface TxIncluded {\n  ID: string;\n  receipt: TransactionReceiptObj;\n}\n\nexport interface TxParams {\n  version: number;\n  toAddr: string;\n  amount: BN;\n  gasPrice: BN;\n  gasLimit: Long;\n\n  code?: string;\n  data?: string;\n  receipt?: TxReceipt;\n  nonce?: number;\n  pubKey?: string;\n  signature?: string;\n}\n\nexport const enum TxEventName {\n  Error = 'error',\n  Receipt = 'receipt',\n  Track = 'track',\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as util from './util';\n\nexport * from './account';\nexport * from './wallet';\nexport * from './transaction';\nexport * from './transactionFactory';\nexport * from './types';\n\nexport { util };\n"],"names":["zcrypto.getPubKeyFromPrivateKey","zcrypto.getAddressFromPublicKey","zcrypto.toBech32Address","zcrypto.decryptPrivateKey","zcrypto.encryptPrivateKey","bytes","zcrypto.sign","zcrypto.normalizePrivateKey","zcrypto.schnorr"],"mappings":"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"}